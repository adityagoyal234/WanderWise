<%- layout('layouts/boilerplate') %>

  <div class="container mt-4">
    <!-- Search and Filter Section -->
    <div class="row mb-4">
      <div class="col-md-12">
        <form action="/listings" method="GET" class="row g-3" id="searchForm">
          <div class="col-md-4">
            <div class="input-group position-relative">
              <input type="text" class="form-control" name="search" id="searchInput" placeholder="Search listings..."
                value="<%= query?.search || '' %>">
              <button class="btn btn-primary" type="submit">
                <i class="fas fa-search"></i>
              </button>
              <div id="suggestions" class="position-absolute w-100 bg-white border rounded-bottom shadow-sm"
                style="top: 100%; z-index: 1000; display: none;"></div>
            </div>
          </div>
          <div class="col-md-2">
            <input type="number" class="form-control" name="minPrice" id="minPrice" placeholder="Min Price" min="0"
              value="<%= query?.minPrice || '' %>">
          </div>
          <div class="col-md-2">
            <input type="number" class="form-control" name="maxPrice" id="maxPrice" placeholder="Max Price" min="0"
              value="<%= query?.maxPrice || '' %>">
          </div>
          <div class="col-md-2">
            <input type="text" class="form-control" name="location" placeholder="Location"
              value="<%= query?.location || '' %>">
          </div>
          <div class="col-md-2">
            <select class="form-select" name="sort">
              <option value="">Sort By</option>
              <option value="price_asc" <%=query?.sort==='price_asc' ? 'selected' : '' %>>Price: Low to High</option>
              <option value="price_desc" <%=query?.sort==='price_desc' ? 'selected' : '' %>>Price: High to Low</option>
              <option value="rating_desc" <%=query?.sort==='rating_desc' ? 'selected' : '' %>>Rating</option>
            </select>
          </div>
        </form>
      </div>
    </div>

    <!-- Listings Grid -->
    <div class="row">
      <% if (listings.length===0) { %>
        <div class="col-12 text-center">
          <div class="alert alert-info">
            No listings found matching your criteria.
          </div>
        </div>
        <% } else { %>
          <% listings.forEach((listing)=> { %>
            <div class="col-md-6 col-lg-3 mb-4">
              <div class="card h-100">
                <img src="<%= listing.image %>" class="card-img-top" alt="<%= listing.title %>"
                  style="height: 200px; object-fit: cover;">
                <div class="card-body">
                  <h5 class="card-title">
                    <%= listing.title %>
                  </h5>
                  <p class="card-text text-truncate">
                    <%= listing.description %>
                  </p>
                  <p class="card-text">
                    <small class="text-muted">
                      <i class="fas fa-map-marker-alt"></i>
                      <%= listing.location %>
                    </small>
                  </p>
                  <p class="card-text">
                    <strong>â‚¹<%= listing.price %></strong> / night
                  </p>
                  <a href="/listings/<%= listing._id %>" class="btn btn-primary">View Details</a>
                </div>
              </div>
            </div>
            <% }); %>
              <% } %>
    </div>

    <!-- Pagination -->
    <% if (totalPages> 1) { %>
      <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
          <!-- First Page -->
          <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
            <a class="page-link" href="?page=1<%= queryString %>" aria-label="First">
              <span aria-hidden="true">&laquo;&laquo;</span>
            </a>
          </li>

          <!-- Previous Page -->
          <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
            <a class="page-link" href="?page=<%= currentPage - 1 %><%= queryString %>" aria-label="Previous">
              <span aria-hidden="true">&laquo;</span>
            </a>
          </li>

          <!-- Page Numbers -->
          <% let startPage=Math.max(1, currentPage - 2); let endPage=Math.min(totalPages, startPage + 4); if (endPage -
            startPage < 4) { startPage=Math.max(1, endPage - 4); } %>

            <% for(let i=startPage; i <=endPage; i++) { %>
              <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %><%= queryString %>">
                  <%= i %>
                </a>
              </li>
              <% } %>

                <!-- Next Page -->
                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                  <a class="page-link" href="?page=<%= currentPage + 1 %><%= queryString %>" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                  </a>
                </li>

                <!-- Last Page -->
                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                  <a class="page-link" href="?page=<%= totalPages %><%= queryString %>" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                  </a>
                </li>
        </ul>
      </nav>
      <% } %>
  </div>

  <style>
    #suggestions {
      max-height: 200px;
      overflow-y: auto;
    }

    .suggestion-item {
      padding: 8px 12px;
      cursor: pointer;
    }

    .suggestion-item:hover {
      background-color: #f8f9fa;
    }
  </style>

  <script>
    // Auto-suggest feature
    const searchInput = document.getElementById('searchInput');
    const suggestionsDiv = document.getElementById('suggestions');
    let debounceTimer;

    searchInput.addEventListener('input', async (e) => {
      const query = e.target.value.trim();

      // Clear previous timer
      clearTimeout(debounceTimer);

      // Hide suggestions if query is too short
      if (query.length < 2) {
        suggestionsDiv.style.display = 'none';
        return;
      }

      // Set new timer for debouncing
      debounceTimer = setTimeout(async () => {
        try {
          const response = await fetch(`/listings/api/suggestions?q=${encodeURIComponent(query)}`);
          const suggestions = await response.json();

          if (suggestions.length > 0) {
            suggestionsDiv.innerHTML = suggestions
              .map(suggestion => `<div class="suggestion-item">${suggestion}</div>`)
              .join('');
            suggestionsDiv.style.display = 'block';
          } else {
            suggestionsDiv.style.display = 'none';
          }

          // Add click handlers to suggestions
          document.querySelectorAll('.suggestion-item').forEach(item => {
            item.addEventListener('click', () => {
              searchInput.value = item.textContent;
              suggestionsDiv.style.display = 'none';
              searchInput.form.submit();
            });
          });
        } catch (error) {
          console.error('Error fetching suggestions:', error);
          suggestionsDiv.style.display = 'none';
        }
      }, 300); // 300ms debounce
    });

    // Close suggestions when clicking outside
    document.addEventListener('click', (e) => {
      if (!searchInput.contains(e.target) && !suggestionsDiv.contains(e.target)) {
        suggestionsDiv.style.display = 'none';
      }
    });

    // Handle keyboard navigation
    searchInput.addEventListener('keydown', (e) => {
      const items = suggestionsDiv.getElementsByClassName('suggestion-item');
      const currentItem = suggestionsDiv.querySelector('.suggestion-item:hover');

      if (e.key === 'ArrowDown') {
        e.preventDefault();
        if (!currentItem) {
          items[0]?.classList.add('hover');
        } else {
          const nextItem = currentItem.nextElementSibling;
          if (nextItem) {
            currentItem.classList.remove('hover');
            nextItem.classList.add('hover');
          }
        }
      } else if (e.key === 'ArrowUp') {
        e.preventDefault();
        if (currentItem) {
          const prevItem = currentItem.previousElementSibling;
          currentItem.classList.remove('hover');
          if (prevItem) {
            prevItem.classList.add('hover');
          }
        }
      } else if (e.key === 'Enter' && currentItem) {
        e.preventDefault();
        currentItem.click();
      } else if (e.key === 'Escape') {
        suggestionsDiv.style.display = 'none';
      }
    });
  </script>